"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/index.html","fe79c1f3711af82e83b1519d39e82def"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/css/main.c18bb4b9.css","f4312d271024685779e39a3bc7223370"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/js/main.18247fdd.js","28a812dfd53248c852feb7f761b808ba"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/add-user-to-board.7223de99.png","7223de999fb2cb5c91f39471f4b62216"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/board.16c869bb.png","16c869bb6c0e95812c0738d9b5cd29eb"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/boards-dropdown.06bf3167.png","06bf3167100d9bf25f0461854923bc40"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/boards-shared-with-me.106f5c2c.png","106f5c2cc0bc1ecfe06751261f234300"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/boards.ebec0431.png","ebec04311c324ac0389f0498d3815d8e"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/forgot-password.24217443.png","2421744359ffbbf327e49b296a165133"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/login.4b09b137.png","4b09b1371bd9593483152b490ca3018a"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/menu.69feee0d.png","69feee0db76fc735e405407e7e80f862"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/modal-comments.018b3eb6.png","018b3eb6a433b39cae8dc0ff272dbbc8"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/modal-labels.f8b74f1d.png","f8b74f1dc8c2bbb7d3c98eca57631722"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/modal-title.dec7230f.png","dec7230ff1e9de963d1ef8b918a98ee6"],["%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/static/media/reset-password.fba634cd.png","fba634cdacde9b5ac97ed3d03f31d0c6"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var r=new URL(e);return"/"===r.pathname.slice(-1)&&(r.pathname+=t),r.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,r,n){var a=new URL(e);return n&&a.pathname.match(n)||(a.search+=(a.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(r)),a.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var r=new URL(t).pathname;return e.some(function(e){return r.match(e)})},stripIgnoredUrlParameters=function(e,t){var r=new URL(e);return r.hash="",r.search=r.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),r.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],r=e[1],n=new URL(t,self.location),a=createCacheKey(n,hashParamName,r,/\.\w{8}\./);return[n.toString(),a]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(r){if(!t.has(r)){var n=new Request(r,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+r+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(r,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(r){return Promise.all(r.map(function(r){if(!t.has(r.url))return e.delete(r)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,r=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(r))||(r=addDirectoryIndex(r,"index.html"),t=urlsToCacheKeys.has(r));var n="%3Cgithub-username%3E.github.io/%3Cproject-repo%3E/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(r=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(r)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(r)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});